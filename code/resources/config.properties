#***************** An Open Source Benchmarking Platform *****************
#* This code was developed as part of research conducted by UMBC Ph.D. students,
#* to benchmark new generation of databases for IoT data.
#* This is an Open Source Benchmarking tool which can be used freely.
#*
# This configuration file has 3 sections for Message Producers, Message Importer/Consumer, and Program execution parameters

#Author : Arjun Pandya
#Date: 2018-07-09

# ********** SECTION 1 **********

########## CustomProducer configurations ##########
# Message type should be used to define the kafka message format
# use csv for CSV message format
# use json for JSON message format
MESSAGE_TYPE = csv
# BROKER_LIST can be used to define the number of kafka brokers to send messages, include server ip and port number
# for ex. 1.0.0.27:9092
BROKER_LIST = 1.0.0.27:9092

# Following properties define the topic for each sensor under which you want to produce messages for each sensor
SENSOR_TOPIC = TSENSOR


# ********** SECTION 2 **********
##########  Importer/Consumer Configuration to import the Kafka messages ##########
#MONGO_PRODUCER define the ip address of kafka server without port
MONGO_PRODUCER = 1.0.0.27

#ZOOKEEPER_PORT defines the port on which zookeeper service is running on producer
ZOOKEEPER_PORT = 9092

#MONGO_DATABASE defines the database in which messages will be imported
MONGO_DATABASE=SENSORS

#PARTITION_COUNT defines the number of partitions of a Kafka topic
PARTITION_COUNT = 4

# Following properties defines the collection per sensor in which messages will be imported
RHSENSOR_SCHEMA = RHSENSOR
PSENSOR_SCHEMA = PSENSOR
TSENSOR_SCHEMA = TSENSOR

# ********** SECTION 3 **********

########## Execution properties ##########
#PRODUCER_COUNT is the number of procedure we want to run for a sensor, general setup creates 1 producer for 1 sensor.
PRODUCER_COUNT = 10


# EXEC_TIME defines the number of hours for which you want to produce the messages, provide the value in secs,
# for 1 minute provide 60, which is 60 seconds
# for 1 hour provide 3600, which is 60 seconds * 60 minutes
# for 8 hours 28800 which is 60 seconds * 60 minutes * 8 hours
EXEC_TIME = 10

# RECS_PER_SEC defines number of messages per second you want to produce for each sensor
RECS_PER_SEC = 100

# SENSOR_TYPE defines for which sensor you want to produce messages,
# ALL for all 3 sensors
# RH for Relative Humidity Sensor
# P for Pressure Sensor
# T for Temperature Sensor
SENSOR_TYPE = T